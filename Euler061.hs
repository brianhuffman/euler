module Euler061 where
import Permutation

{-
Problem 61
Find the sum of the only set of six 4-digit figurate
  numbers with a cyclic property.

16 January 2004

Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers are
all figurate (polygonal) numbers and are generated by the following formulae:
Triangle        P(3,n)=n(n+1)/2         1, 3, 6, 10, 15, ...
Square          P(4,n)=n^2              1, 4, 9, 16, 25, ...
Pentagonal      P(5,n)=n(3n-1)/2        1, 5, 12, 22, 35, ...
Hexagonal       P(6,n)=n(2n-1)          1, 6, 15, 28, 45, ...
Heptagonal      P(7,n)=n(5n-3)/2        1, 7, 18, 34, 55, ...
Octagonal       P(8,n)=n(3n-2)          1, 8, 21, 40, 65, ...

The ordered set of three 4-digit numbers: 8128, 2882, 8281, has three
interesting properties.

   1. The set is cyclic, in that the last two digits of each number is the
      first two digits of the next number (including the last number with
      the first).
   2. Each polygonal type: triangle (P3,127=8128), square (P4,91=8281), and
      pentagonal (P(5,44)=2882), is represented by a different number in the
      set.
   3. This is the only set of 4-digit numbers with this property.

Find the sum of the only ordered set of six cyclic 4-digit numbers for which
each polygonal type: triangle, square, pentagonal, hexagonal, heptagonal, and
octagonal, is represented by a different number in the set.
-}

prob61a =
  [ [x1,x2,x3,x4,x5,x6] |
    x1 <- xs1,
    (xs2, xss2) <- remove1 xss1,
    x2 <- matching x1 xs2,
    (xs3, xss3) <- remove1 xss2,
    x3 <- matching x2 xs3,
    (xs4, xss4) <- remove1 xss3,
    x4 <- matching x3 xs4,
    (xs5, xss5) <- remove1 xss4,
    x5 <- matching x4 xs5,
    (xs6, xss6) <- remove1 xss5,
    x6 <- matching x5 xs6,
    x6 `mod` 100 == x1 `div` 100 ]
  where
    matching x xs =
      let y = x `mod` 100 * 100
      in takeWhile (<y+99) $ dropWhile (<y) xs
    figurate = takeWhile (<10000) . dropWhile (<1000) . polygon_seq
    polygon_seq n = scanl1 (+) [1, n-1 ..]
    xs1 = figurate 3
    xss1 = map figurate [4..8]

main :: IO String
main = return $ show $ sum $ head prob61a
-- 28684
